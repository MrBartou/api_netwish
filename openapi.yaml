openapi: 3.0.3
info:
  title: API NetWish
  description: API for recommendation films and series, based on the user's preferences in TMDB.
  contact:
    email: dev@netWish.com
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      server:
        default: localhost

tags:
  - name: User
    description: User management
  - name: films
    description: Films management
  - name: series
    description: Series management
  - name: recommendations
    description: Recommendations management
  - name: favoris
    description: Favoris management

paths:
  /users:
    get:
      tags:
        - User
      summary: Get all users
      description: Get all users
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    post:
      tags:
        - User
      summary: Create a user
      description: Create a user
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              firstName: John
              lastName: Doe
              email: 'john.doe@outlook.com'
              password: '123456'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /users/{id}:
    get:
      tags:
        - User
      summary: Get a user
      description: Get a user
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      tags:
        - User
      summary: Update a user
      description: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      tags:
        - User
      summary: Delete a user
      description: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                response: User deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /recommendations:
    get:
      tags:
        - recommendations
      summary: Get all recommendations
      description: Get all recommendations
      operationId: getRecommendations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recommendations'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /favoris:
    get:
      tags:
        - favoris
      summary: Get all favoris
      description: Get all favoris
      operationId: getFavoris
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                firstName: John
                lastName: Doe
                email: 'john.doe@outlook.com'
                favoris:
                  type: array
                  items:
                    - id: 1
                      title: 'The Godfather'
                      type: 'movie'
                    - id: 2
                      title: 'The Godfather: Part II'
                      type: 'movie'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    post:
      tags:
        - favoris
      summary: Create a favoris
      description: Create a favoris
      operationId: createFavoris
      requestBody:
        description: Favoris to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              idUser: 1
              idMedia: 1
              title: 'The Godfather'
              type: 'movie'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                idUser: 1
                idMedia: 1
                title: 'The Godfather'
                type: 'movie'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      tags:
        - favoris
      summary: Delete a favoris
      description: Delete a favoris
      operationId: deleteFavoris
      requestBody:
        description: Favoris to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              idUser: 1
              idMedia: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                response: Favoris deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The auto-generated id of the user
        firstName:
          type: string
          description: The first name of the user
        lastName:
          type: string
          description: The last name of the user
        email:
          type: string
          description: The email of the user
          format: email
        password:
          type: string
          description: The password of the user
        favoris:
          type: array
          description: The favoris of the user
          maximum: 10
          items:
            type: integer
        admin:
          type: boolean
          description: The admin of the user
          default: false
    recommendations:
      type: object
      properties:
        adult:
          type: boolean
          description: If it's an adult film
        backdrop_path:
          type: string
          description: The backdrop path of the films
        genre_ids:
          type: array
          description: The genre ids of the films
          items:
            type: integer
        id:
          type: integer
          description: The id of the films
        original_language:
          type: string
          description: The original language of the films
        original_title:
          type: string
          description: The original title of the films
        overview:
          type: string
          description: The overview of the films
        popularity:
          type: number
          description: The popularity of the films
        poster_path:
          type: string
          description: The poster path of the films
        release_date:
          type: string
          description: The release date of the films
        title:
          type: string
          description: The title of the films
        video:
          type: boolean
          description: If it's a video
        vote_average:
          type: number
          description: The vote average of the films
        vote_count:
          type: integer
          description: The vote count of the films